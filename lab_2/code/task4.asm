;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; 1DT301, Computer Technology I
; Date: 2016-09-15
; Author:
; Student name 1
; Student name 2
;
; Lab number: 1
; Title: How to use the PORTs. Digital input/output. Subroutine call.
;
; Hardware: STK600, CPU ATmega2560
;
; Function: Describe the function of the program, so that you can understand it,
; even if you're viewing this in a year from now!
;
; Input ports: Describe the function of used ports, for example on-board switches
; connected to PORTA.
;
; Output ports: Describe the function of used ports, for example on-board LEDs
; connected to PORTB.
;
; Subroutines: If applicable.
; Included files: m2560def.inc
;
; Other information:
;
; Changes in program: (Description and date)
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

.include "m2560def.inc"

; Initialize SP, Stack Pointer
ldi r21, HIGH(RAMEND) ; R20 = high part of RAMEND address
out SPH,R21 ; SPH = high part of RAMEND address
ldi R21, low(RAMEND) ; R20 = low part of RAMEND address
out SPL,R21 ; SPL = low part of RAMEND address

.equ nbrExecution = 2000 ; equ assigns a constant value to a label therefore this value cannot be changed later
; we define the number of loop executions as constant

;we initialize
ldi r16, 0xFF ;
out DDRB, r16 ; we set the DDRB as output

ring_counter:
	ldi r18, 0b11111110

ring_loop:
	out PORTB, r18 ;we put the value of r18 to PORTB which should turn on the light
	call Delay
	com r18
	LSL r18
	com r18

	;Check if everything is off if true then go to ring counter to make infinite loop
	ldi r21,0xFF
	cp r21, r18
	breq ring_counter
	rjmp ring_loop

Delay :

	; r25:r24 is a 16 bit register and so can have 65,536 different numbers, it can count 256 times longer than with an 8 bit register only.

	;The lower byte of the 16-bit-adress is located in the lower register, the higher byte in the upper register. Both parts have their own names, e.g. the higher byte of Z is named ZH (=R31), the lower Byte is ZL (=R30).
	;These names are defined in the standard header file for the chips. Dividing these 16-bit-pointer-names into two different bytes is done like follows:
	ldi r25, HIGH(nbrExecution) ; We set the Most Significant Bit at the address nbrExecution
	ldi r24, LOW(nbrExecution) ; We set the Least Significant Bit at the address nbrExecution

	wait_milliseconds :
		rcall sub_delay ;we call the sub_delay that contains 1ms that is going to be repeated 1000 times to do 1s
		sbiw r24, 1 ; By doing that we substract 1 from the register pair r25:r24
		;The instruction "SBIW R24,1" decreases the register pair word-wise. That means that whenever the LSB (Least Significant Bit r24) underflows, the MSB(Most Significant Bit r25) is also automatically reduced by 1.
		brne wait_milliseconds ; if not zero start loop again, if zero continue

	;rjmp wait_milliseconds ; as long as the pair value r25:r24 did not reach 0 it will stay in this wait_milliseconds loop



sub_delay :
	; Generated by delay loop calculator
	; at http://www.bretmulvey.com/avrdelay.html
	;
	; Delay 2 000 cycles
	; 500us at 4.0 MHz

		ldi  r17, 3
		ldi  r19, 152
	L1: dec  r19
		brne L1
		dec  r17
		brne L1
		nop
		ret
